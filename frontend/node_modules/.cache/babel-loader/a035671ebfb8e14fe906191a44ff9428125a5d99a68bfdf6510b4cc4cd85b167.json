{"ast":null,"code":"export const handleApiError = error => {\n  console.error('API Error:', error);\n\n  // Network error\n  if (!error.response) {\n    return {\n      message: 'Network error. Please check your internet connection.',\n      type: 'network'\n    };\n  }\n\n  // Server error response\n  const {\n    status,\n    data\n  } = error.response;\n\n  // Authentication errors\n  if (status === 401 || status === 403) {\n    // Clear token if authentication fails\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return {\n      message: data.message || 'Authentication failed. Please log in again.',\n      type: 'auth'\n    };\n  }\n\n  // Validation errors\n  if (status === 400) {\n    return {\n      message: data.message || 'Invalid input. Please check your data.',\n      type: 'validation'\n    };\n  }\n\n  // Kubernetes errors\n  if (data.message && data.message.includes('kube-config')) {\n    return {\n      message: 'Kubernetes configuration error. Please check your cluster setup.',\n      type: 'kubernetes'\n    };\n  }\n\n  // Generic server error\n  if (status >= 500) {\n    return {\n      message: 'Server error. Please try again later.',\n      type: 'server'\n    };\n  }\n\n  // Default error\n  return {\n    message: data.message || 'An unexpected error occurred.',\n    type: 'unknown'\n  };\n};\nexport const isAuthError = error => {\n  return error.type === 'auth';\n};","map":{"version":3,"names":["handleApiError","error","console","response","message","type","status","data","localStorage","removeItem","includes","isAuthError"],"sources":["/home/deepesh/Desktop/kubernetes-vulnerability/frontend/src/utils/errorHandler.js"],"sourcesContent":["export const handleApiError = (error) => {\n  console.error('API Error:', error);\n\n  // Network error\n  if (!error.response) {\n    return {\n      message: 'Network error. Please check your internet connection.',\n      type: 'network',\n    };\n  }\n\n  // Server error response\n  const { status, data } = error.response;\n\n  // Authentication errors\n  if (status === 401 || status === 403) {\n    // Clear token if authentication fails\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return {\n      message: data.message || 'Authentication failed. Please log in again.',\n      type: 'auth',\n    };\n  }\n\n  // Validation errors\n  if (status === 400) {\n    return {\n      message: data.message || 'Invalid input. Please check your data.',\n      type: 'validation',\n    };\n  }\n\n  // Kubernetes errors\n  if (data.message && data.message.includes('kube-config')) {\n    return {\n      message: 'Kubernetes configuration error. Please check your cluster setup.',\n      type: 'kubernetes',\n    };\n  }\n\n  // Generic server error\n  if (status >= 500) {\n    return {\n      message: 'Server error. Please try again later.',\n      type: 'server',\n    };\n  }\n\n  // Default error\n  return {\n    message: data.message || 'An unexpected error occurred.',\n    type: 'unknown',\n  };\n};\n\nexport const isAuthError = (error) => {\n  return error.type === 'auth';\n};\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,KAAK,IAAK;EACvCC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;;EAElC;EACA,IAAI,CAACA,KAAK,CAACE,QAAQ,EAAE;IACnB,OAAO;MACLC,OAAO,EAAE,uDAAuD;MAChEC,IAAI,EAAE;IACR,CAAC;EACH;;EAEA;EACA,MAAM;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGN,KAAK,CAACE,QAAQ;;EAEvC;EACA,IAAIG,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;IACpC;IACAE,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/B,OAAO;MACLL,OAAO,EAAEG,IAAI,CAACH,OAAO,IAAI,6CAA6C;MACtEC,IAAI,EAAE;IACR,CAAC;EACH;;EAEA;EACA,IAAIC,MAAM,KAAK,GAAG,EAAE;IAClB,OAAO;MACLF,OAAO,EAAEG,IAAI,CAACH,OAAO,IAAI,wCAAwC;MACjEC,IAAI,EAAE;IACR,CAAC;EACH;;EAEA;EACA,IAAIE,IAAI,CAACH,OAAO,IAAIG,IAAI,CAACH,OAAO,CAACM,QAAQ,CAAC,aAAa,CAAC,EAAE;IACxD,OAAO;MACLN,OAAO,EAAE,kEAAkE;MAC3EC,IAAI,EAAE;IACR,CAAC;EACH;;EAEA;EACA,IAAIC,MAAM,IAAI,GAAG,EAAE;IACjB,OAAO;MACLF,OAAO,EAAE,uCAAuC;MAChDC,IAAI,EAAE;IACR,CAAC;EACH;;EAEA;EACA,OAAO;IACLD,OAAO,EAAEG,IAAI,CAACH,OAAO,IAAI,+BAA+B;IACxDC,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMM,WAAW,GAAIV,KAAK,IAAK;EACpC,OAAOA,KAAK,CAACI,IAAI,KAAK,MAAM;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}